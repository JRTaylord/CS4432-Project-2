package simpledb.planner;

import simpledb.materialize.SmartMergeJoinPlan;
import simpledb.parse.QueryData;
import simpledb.query.Plan;
import simpledb.query.TablePlan;
import simpledb.server.SimpleDB;
import simpledb.tx.Transaction;

import java.util.ArrayList;
import java.util.List;

/**
 * Project 2
 */
public class ExploitSortQueryPlanner implements QueryPlanner {
    
    public Plan createPlan(QueryData data, Transaction tx) {
        List<Plan> plans = new ArrayList<Plan>();
        List<String> tblNames = new ArrayList<>();
        for (String tblname : data.tables()) {
            String viewdef = SimpleDB.mdMgr().getViewDef(tblname, tx);
            if (viewdef != null) {
                plans.add(SimpleDB.planner().createQueryPlan(viewdef, tx));
                tblNames.add(viewdef);
            }
            else {
                plans.add(new TablePlan(tblname, tx));
                tblNames.add(tblname);
            }
        }

        // I guess this sorts the plans
        Plan p = plans.remove(0);
        String t = tblNames.remove(0);
        for (int i=0;i<plans.size();i++) {
            p=new SmartMergeJoinPlan(p,plans.get(i),t,tblNames.get(i),tx);
        }

        //eturns the final product
        return p;
    }
}
